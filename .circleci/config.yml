version: 2
jobs:
  build:

    # set working director based on gopath
    working_directory: "/go/src/github.com/matzhouse/example-go-circle"

    # set up a folder for test results
    environment:
      TEST_RESULTS: /tmp/test-results

    # use the go container
    docker:
      - image: circleci/golang:latest

    # start build process
    steps:
      - checkout

    # run unit tests
      - run: go test -v ./...

    # build static binary
      - run: CGO_ENABLED=0 go build -a -installsuffix cgo -v -ldflags '-s' -o cmd/example/example ./cmd/example/


    # run some intergration tests
      - run: mkdir -p $TEST_RESULTS

      - run:
          name: Run integration tests
          command: |
                ./cmd/example/example > ${TEST_RESULTS}/runTest

      - run: 
          name: Check test results
          command: |
                x=$(cat ${TEST_RESULTS}/runTest);
                if [ "$x" != "Hello mat" ]; then
                  exit 1
                fi

      # need to setup docker here for any docker commands that follow
      - setup_remote_docker

      # build the docker image
      - run: docker build -t matzhouse/example-go-circle .


      # save the go binary for ref
      - store_artifacts:
          path: /go/src/github.com/matzhouse/example-go-circle/cmd/example/example